name: Deploy EKS
on:
    push:
        branches: [main]
        tags:
            - 'v*.*.*'
env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  EKS_CLUSTER: ${{ secrets.EKS_CLUSTER }}
  EKS_REGION: ${{ secrets.EKS_REGION }}
  DOCKER_ID: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKER_PW: ${{ secrets.DOCKERHUB_TOKEN }}
jobs:
    build:
         runs-on: ubuntu-latest

         steps:
        
         - uses: actions/checkout@v2

         - name: Docker metadata
           id: docker_meta
           uses: crazy-max/ghaction-docker-meta@v1
           with:
              images: unitynts/appwork_web
              tag-sha: true       

         - name: QEMU
           uses: docker/setup-qemu-action@/v1


         - name: Docker Buildx
           uses: docker/setup-buidx-action@v1

         - name: Login to Dockerhub
           uses: docker/login-action@v1
           with:
             username: ${{secrets.DOCKERHUB_USERNAME}}
             password: ${{secrets.DOCKERHUB_TOKEN}}
         
         - name: Build and Push
           id: docker_build
           uses: docker/build-push-actions@v2
           with:
             context: ./image-appwork/docker-appwork/
             file: ./image-appwork/docker-appwork/Dockerfile
             platforms: linux/amd64
             tags: ${{steps.docker_meta.outputs.tags}}
             labels: ${{steps.docker_meta.outputs.tags}}

         - name: Configure AWS credentials
           uses: aws-actions/configure-aws-credentials@v1
           with:
             aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
             aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
             aws-region: ${{ env.AWS_REGION }}

         - name: Install and configure kubectl
           run: |
             VERSION=$(curl --silent https://storage.googleapis.com/kubernetes-release/release/stable.txt)
              curl https://storage.googleapis.com/kubernetes-release/release/$VERSION/bin/linux/amd64/kubectl \
              --progress-bar \
              --location \
              --remote-name 
              chmod +x kubectl
              sudo mv kubectl /usr/local/bin/
              echo ${{ secrets.KUBECONFIG }} | base64 --decode > kubeconfig.yaml

         - name: set deployment image
           run: kubectl set image deployment appwork appwork=unitynts/appwork_web:${{steps.docker_meta.outputs.tags}}




 
